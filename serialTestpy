import serial
import time

# Initialize serial connection
ser = serial.Serial('/dev/ttyACM0', 115200, timeout=4)

def send_command(command):
    print(f"Sending command: {command}")
    ser.write(f"{command}\r\n".encode())
    #ser.write(command.encode() + b'\n')
    time.sleep(0.1)
    response = ser.read_all().decode().strip()
    if response:
        print(f"Response: {response}")

try:
    # Initialize motors
    #send_command("from mindstorms import PrimeHub, Motor")
    time.sleep(2)
    #send_command("^D")
    ser.write(b'\x03')
    time.sleep(10)
    
    send_command("from mindstorms import Motor")
    
    #send_command("hub = PrimeHub()")
    send_command("motor_a = Motor('A')")
    send_command("motor_b = Motor('B')")

    # Move motor A forward
  #  send_command("motor_a.run_for_degrees(360, 50)")
    send_command("motor_a.run_to_position( 50)")

    # Move motor B backward
    send_command("motor_b.run_for_degrees(-360, 50)")

    # Run both motors simultaneously
    send_command("motor_a.start(50)")
    send_command("motor_b.start(-50)")
    time.sleep(2)
    send_command("motor_a.stop()")
    send_command("motor_b.stop()")

    # Get motor positions
    send_command("print(motor_a.get_position())")
    send_command("print(motor_b.get_position())")

except Exception as e:
    print(f"Error: {e}")

finally:
    ser.close()
    print("Serial connection closed")
